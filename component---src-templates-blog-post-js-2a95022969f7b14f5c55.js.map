{"version":3,"sources":["webpack://cursorbeat-dev-blog/./.yarn/cache/path-browserify-npm-1.0.1-f975d99a99-45bb738917.zip/node_modules/path-browserify/index.js","webpack://cursorbeat-dev-blog/./.yarn/cache/@babel-runtime-npm-7.14.0-fba2a32266-ab6653f2f8.zip/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://cursorbeat-dev-blog/./.yarn/cache/@babel-runtime-npm-7.14.0-fba2a32266-ab6653f2f8.zip/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://cursorbeat-dev-blog/./.yarn/cache/@babel-runtime-npm-7.14.0-fba2a32266-ab6653f2f8.zip/node_modules/@babel/runtime/helpers/construct.js","webpack://cursorbeat-dev-blog/./.yarn/cache/@babel-runtime-npm-7.14.0-fba2a32266-ab6653f2f8.zip/node_modules/@babel/runtime/helpers/defineProperty.js","webpack://cursorbeat-dev-blog/./.yarn/cache/@babel-runtime-npm-7.14.0-fba2a32266-ab6653f2f8.zip/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://cursorbeat-dev-blog/./.yarn/cache/@babel-runtime-npm-7.14.0-fba2a32266-ab6653f2f8.zip/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://cursorbeat-dev-blog/./.yarn/cache/@babel-runtime-npm-7.14.0-fba2a32266-ab6653f2f8.zip/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://cursorbeat-dev-blog/./.yarn/cache/@babel-runtime-npm-7.14.0-fba2a32266-ab6653f2f8.zip/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://cursorbeat-dev-blog/./.yarn/cache/@babel-runtime-npm-7.14.0-fba2a32266-ab6653f2f8.zip/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://cursorbeat-dev-blog/./.yarn/$$virtual/gatsby-plugin-mdx-virtual-d0cc370b40/0/cache/gatsby-plugin-mdx-npm-2.6.0-1b3ec9a1c3-6491cd2309.zip/node_modules/gatsby-plugin-mdx/index.js","webpack://cursorbeat-dev-blog/./.yarn/$$virtual/gatsby-plugin-mdx-virtual-d0cc370b40/0/cache/gatsby-plugin-mdx-npm-2.6.0-1b3ec9a1c3-6491cd2309.zip/node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://cursorbeat-dev-blog/./src/components/blog/BlogAuthor.js","webpack://cursorbeat-dev-blog/./src/styles/blog/BlogPostStyles.js","webpack://cursorbeat-dev-blog/./src/templates/blogPost.js"],"names":["assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","undefined","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","root","base","name","_format","parse","ret","delimiter","win32","module","exports","arr","len","arr2","Array","__esModule","arrayLikeToArray","isArray","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","obj","key","value","Object","defineProperty","enumerable","configurable","writable","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","toString","constructor","test","MDXRenderer","require","React","mdx","useMDXScope","scope","children","props","mdxScope","End","fullScope","keys","values","fn","myData","useStaticQuery","me","childMdx","frontmatter","miniBio","portrait","email","handle","className","G","image","childImageSharp","gatsbyImageData","title","alt","style","height","width","borderRadius","styled","theme","transition","bgColor","textColor","seo","data","type","slug","subtitle","imageTitle","imageAlt","date","tags","page","description","excerpt","url","imgUrl","getSrc","file","imgAlt","breadcrumbs","textAlign","timeToRead","getImage","marginBottom","body"],"mappings":"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","file":"component---src-templates-blog-post-js-2a95022969f7b14f5c55.js","sourcesContent":["// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n} // Resolves . and .. elements in a path with directory names\n\n\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length) code = path.charCodeAt(i);else if (code === 47\n    /*/*/\n    ) break;else code = 47\n    /*/*/\n    ;\n\n    if (code === 47\n    /*/*/\n    ) {\n        if (lastSlash === i - 1 || dots === 1) {// NOOP\n        } else if (lastSlash !== i - 1 && dots === 2) {\n          if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46\n          /*.*/\n          || res.charCodeAt(res.length - 2) !== 46\n          /*.*/\n          ) {\n              if (res.length > 2) {\n                var lastSlashIndex = res.lastIndexOf('/');\n\n                if (lastSlashIndex !== res.length - 1) {\n                  if (lastSlashIndex === -1) {\n                    res = '';\n                    lastSegmentLength = 0;\n                  } else {\n                    res = res.slice(0, lastSlashIndex);\n                    lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n                  }\n\n                  lastSlash = i;\n                  dots = 0;\n                  continue;\n                }\n              } else if (res.length === 2 || res.length === 1) {\n                res = '';\n                lastSegmentLength = 0;\n                lastSlash = i;\n                dots = 0;\n                continue;\n              }\n            }\n\n          if (allowAboveRoot) {\n            if (res.length > 0) res += '/..';else res = '..';\n            lastSegmentLength = 2;\n          }\n        } else {\n          if (res.length > 0) res += '/' + path.slice(lastSlash + 1, i);else res = path.slice(lastSlash + 1, i);\n          lastSegmentLength = i - lastSlash - 1;\n        }\n\n        lastSlash = i;\n        dots = 0;\n      } else if (code === 46\n    /*.*/\n    && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n\n  if (!dir) {\n    return base;\n  }\n\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0) path = arguments[i];else {\n        if (cwd === undefined) cwd = process.cwd();\n        path = cwd;\n      }\n      assertPath(path); // Skip empty entries\n\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47\n      /*/*/\n      ;\n    } // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n    // Normalize the path\n\n\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0) return '/' + resolvedPath;else return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n  normalize: function normalize(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var isAbsolute = path.charCodeAt(0) === 47\n    /*/*/\n    ;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47\n    /*/*/\n    ; // Normalize the path\n\n    path = normalizeStringPosix(path, !isAbsolute);\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47\n    /*/*/\n    ;\n  },\n  join: function join() {\n    if (arguments.length === 0) return '.';\n    var joined;\n\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n\n      if (arg.length > 0) {\n        if (joined === undefined) joined = arg;else joined += '/' + arg;\n      }\n    }\n\n    if (joined === undefined) return '.';\n    return posix.normalize(joined);\n  },\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n    if (from === to) return '';\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n    if (from === to) return ''; // Trim any leading backslashes\n\n    var fromStart = 1;\n\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47\n      /*/*/\n      ) break;\n    }\n\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart; // Trim any leading backslashes\n\n    var toStart = 1;\n\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47\n      /*/*/\n      ) break;\n    }\n\n    var toEnd = to.length;\n    var toLen = toEnd - toStart; // Compare paths to find the longest common path from root\n\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47\n          /*/*/\n          ) {\n              // We get here if `from` is the exact base path for `to`.\n              // For example: from='/foo/bar'; to='/foo/bar/baz'\n              return to.slice(toStart + i + 1);\n            } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47\n          /*/*/\n          ) {\n              // We get here if `to` is the exact base path for `from`.\n              // For example: from='/foo/bar/baz'; to='/foo/bar'\n              lastCommonSep = i;\n            } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n\n        break;\n      }\n\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode) break;else if (fromCode === 47\n      /*/*/\n      ) lastCommonSep = i;\n    }\n\n    var out = ''; // Generate the relative path based on the path difference between `to`\n    // and `from`\n\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47\n      /*/*/\n      ) {\n          if (out.length === 0) out += '..';else out += '/..';\n        }\n    } // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n\n\n    if (out.length > 0) return out + to.slice(toStart + lastCommonSep);else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47\n      /*/*/\n      ) ++toStart;\n      return to.slice(toStart);\n    }\n  },\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47\n    /*/*/\n    ;\n    var end = -1;\n    var matchedSlash = true;\n\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n\n      if (code === 47\n      /*/*/\n      ) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n\n        if (code === 47\n        /*/*/\n        ) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47\n        /*/*/\n        ) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n\n    var preDotState = 0;\n\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n\n      if (code === 47\n      /*/*/\n      ) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n\n          continue;\n        }\n\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n\n      if (code === 46\n      /*.*/\n      ) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n    preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n\n    return path.slice(startDot, end);\n  },\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n\n    return _format('/', pathObject);\n  },\n  parse: function parse(path) {\n    assertPath(path);\n    var ret = {\n      root: '',\n      dir: '',\n      base: '',\n      ext: '',\n      name: ''\n    };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47\n    /*/*/\n    ;\n    var start;\n\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1; // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n\n    var preDotState = 0; // Get non-dir info\n\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n\n      if (code === 47\n      /*/*/\n      ) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n\n          continue;\n        }\n\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n\n      if (code === 46\n      /*.*/\n      ) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n    preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n    return ret;\n  },\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\nposix.posix = posix;\nmodule.exports = posix;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst BlogAuthor = () => {\n  const myData = useStaticQuery(graphql`\n    query {\n      me: file(relativePath: { eq: \"me.md\" }) {\n        childMdx {\n          id\n          frontmatter {\n            name\n            miniBio\n            portrait\n            email\n            handle\n            twitterURL\n            githubURL\n            linkedinURL\n          }\n        }\n      }\n\n      portrait: file(relativePath: { eq: \"portrait.png\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: CONSTRAINED)\n        }\n      }\n    }\n  `);\n\n  const {\n    name,\n    miniBio,\n    portrait,\n    email,\n    handle,\n  } = myData.me.childMdx.frontmatter;\n\n  return (\n    <div className=\"author\">\n      <div className=\"portrait\">\n        <GatsbyImage\n          image={myData.portrait.childImageSharp.gatsbyImageData}\n          title=\"Adrian Grimm\"\n          alt=\"photo of Adrian Grimm\"\n          style={{\n            height: '80px',\n            width: '80px',\n            borderRadius: '100%'\n          }}\n        />\n      </div>\n      <div className=\"myInfo\">\n        <h3>By: {name}</h3>\n        <p>{miniBio}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogAuthor;\n","import styled from 'styled-components';\n\nconst BlogPostPageWrapper = styled.div`\n  margin-top: 100px;\n  transition: ${props => props.theme.transition};\n  background-color: ${props => props.theme.bgColor};\n  width: 100%;\n\n  h1 {\n    font-size: 3rem;\n  }\n  h2 {\n    font-size: 1.7rem;\n    margin: 10px 0;\n  }\n  .published {\n    margin-bottom: 3px;    \n  }\n  .mainpostimage {\n    max-height: 380px;\n    object-position: center;\n    text-align: center;\n    img {\n      display: block;\n      max-width:1000px;\n      max-height:380px;\n      width: auto !important;\n      height: auto !important;\n      border: 0 !important;\n    }\n  }\n\n  .author {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 10px;\n    align-items: center;\n\n    div {\n      height: 100px;\n      padding: 10px;\n    }\n    .portrait {\n      align-self: flex-start;\n    }\n    .myInfo {\n      height: auto;\n    }\n    h3 {\n\n      margin: 0 0 10px;\n    }\n    p {\n      font-size: 0.9rem;\n      max-width: 680px;\n    }\n  }\n  \n  .articelBody{\n    img {\n      border: 5px solid black;\n    }\n  }\n\n  .closing {\n    margin: 40px 60px 0;\n    svg {\n      transition: ${props => props.theme.transition};\n      fill: ${props => props.theme.textColor};\n      width: 65vw;\n      height: auto;\n      max-width: 400px;\n    }\n    h3 {\n      margin-top: 15px;\n      margin-left: 35px;\n    }\n  }\n  @media (max-width: 620px) {\n    .author {\n      margin-bottom: 10px;\n      p {\n        margin-bottom: 0;\n        font-size: 0.8rem;\n      }\n    }\n\n    .closing {\n      margin: 30px 15px 10px;\n\n      svg {\n        width: 80vw;\n        height: auto;\n        max-width: 380px;\n      }\n    }\n  }\n`;\n\nexport default BlogPostPageWrapper;\n","import React from 'react';\nimport Layout from './layout';\nimport { Link, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\";\nimport { getSrc } from \"gatsby-plugin-image\"\nimport Moment from 'react-moment';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport BlogAuthor from '../components/blog/BlogAuthor';\nimport BlogPostPageWrapper from '../styles/blog/BlogPostStyles';\nconst path = require(`path`);\n\n\n// TODO add next and previous post links\n\nconst blogPost = props => {\n  const { path, data } = props;\n  const {\n    type,\n    title,\n    slug,\n    subtitle,\n    imageTitle,\n    imageAlt,\n    date,\n    tags,\n  } = data.mdx.frontmatter;\n\n  // ? set SEO meta data depending on post type\n  let seo;\n  if (type === 'blogPost') {\n    seo = {\n      page: `${type}`,\n      title: `${title}`,\n      description: data.mdx.excerpt,\n      url: `https://blog.cursorbeat.dev/${slug}`,\n      imgUrl: getSrc(data.file),\n      imgAlt: imageAlt,\n      breadcrumbs: [\n        {\n          name: `Blog`,\n          path: `/blog`,\n        },\n        {\n          name: `${title}`,\n          path: `/blog/${slug}`,\n        },\n      ],\n    };\n  } else if (type === 'tutorial') {\n    seo = {\n      page: `${type}`,\n      title: `${title}`,\n      description: data.mdx.excerpt,\n      url: `https://blog.cursorbeat.dev/${slug}`,\n      imgUrl: getSrc(data.file),\n      imgAlt: imageAlt,\n      breadcrumbs: [\n        {\n          name: `Tutorials`,\n          path: `/tutorials`,\n        },\n        {\n          name: `${title}`,\n          path: `/tutorials/${slug}`,\n        },\n      ],\n    };\n  }\n\n  return (\n    <Layout seo={seo} path={path} style={{ textAlign: 'left' }}>\n      <BlogPostPageWrapper>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n        <p className=\"published\">\n          Published: <Moment date={date} format=\"MMM DD, YYYY\" />\n        </p>\n\n        {data.mdx.timeToRead &&\n          (type === 'tutorial' ? (\n            <p>\n              Approx. {data.mdx.timeToRead + 5} minutes to\n              complete\n            </p>\n          ) : (\n            <p>{data.mdx.timeToRead} minute read</p>\n          ))}\n\n        <BlogAuthor />\n\n        <GatsbyImage\n          image={getImage(data.file)}\n          className=\"mainpostimage\"\n          style={{\n            marginBottom: '25px',\n          }}\n          alt={imageAlt}\n          title={imageTitle}\n        />\n\n        <div className=\"articelBody\">\n          <MDXRenderer>{data.mdx.body}</MDXRenderer>\n        </div>\n\n        <div className=\"closing\">\n          <h3>- CursorBeat.dev Blog</h3>\n        </div>\n      </BlogPostPageWrapper>\n    </Layout>\n  );\n};\n\nblogPost.propTypes = {\n  path: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default blogPost;\n\nexport const BLOG_POST_QUERY = graphql`\n  query BLOG_POST_QUERY($slug: String!, $imgRegEx: String) {\n    mdx(frontmatter: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 370)\n      body\n      timeToRead\n      frontmatter {\n        type\n        title\n        slug\n        subtitle    \n        imageTitle\n        imageAlt\n        date\n        tags\n      }\n    }\n\n    file(relativePath: { regex: $imgRegEx }) {\n      childImageSharp {\n        gatsbyImageData(layout: CONSTRAINED)\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
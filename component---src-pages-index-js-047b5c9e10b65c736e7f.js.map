{"version":3,"file":"component---src-pages-index-js-047b5c9e10b65c736e7f.js","mappings":"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","sources":["webpack://cursorbeat-dev-blog/./src/styles/index/BlogListingStyles.js","webpack://cursorbeat-dev-blog/./src/images/svg/RightArrowSVG.js","webpack://cursorbeat-dev-blog/./src/components/index/BlogListing.js","webpack://cursorbeat-dev-blog/./src/styles/index/IndexStyles.js","webpack://cursorbeat-dev-blog/./src/images/svg/TwitterSVG.js","webpack://cursorbeat-dev-blog/./src/images/svg/LinkedinSVG.js","webpack://cursorbeat-dev-blog/./src/images/svg/GithubSVG.js","webpack://cursorbeat-dev-blog/./src/images/svg/DownArrowSVG.js","webpack://cursorbeat-dev-blog/./src/pages/index.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst BlogListWrapper = styled.div`\n  border-bottom: 4px solid ${props => props.theme.textColor};\n  transition: ${props => props.theme.transition};\n  margin: 40px 0 25px;\n\n  a {\n    color: ${props => props.theme.textColor};\n    text-decoration: none;\n  }\n\n  h2 {\n    margin: 10px 0 10px;\n  }\n  h3 {\n    font-size: 1rem;\n    font-weight: 300;\n    margin: 8px 0 15px;\n  }\n  h5 {\n    margin: 8px 0 15px;\n  }\n\n  ul {\n    list-style-type: none;\n    display: flex;\n    flex-direction: row;\n    margin: 0;\n    height: auto;\n\n    .listingTag {\n      margin: 0 8px 5px 0;\n      font-size: 0.8rem;\n    }\n  }\n\n  p {\n    margin-bottom: 11px;\n  }\n\n  p.publishDate {\n      font-size: 1rem;\n      font-weight: 300;\n      margin: 8px 0 15px;\n  }\n\n  .timeToRead {\n    span {\n      font-size: 1rem;\n      font-weight: 900;\n      margin: 8px 0 15px;\n    }\n  }\n\n  .readMore {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-around;\n    width: 142px;\n    height: 37px;\n    margin: 10px 0 15px;\n    padding: 8px;\n    background-color: ${props => props.theme.accentColor};\n    transition: 0.3s;\n\n    ul {\n      .listingTag {\n        font-weight: 400;\n        h5 {\n          color: ${props => props.theme.accentColor};\n        }\n      }\n    }\n\n    h3 {\n      margin-bottom: 10px;\n    }\n\n    p {\n      background-color: rgba(0, 0, 0, 0);\n      margin: 0;\n      color: ${props => props.theme.textColor};\n    }\n    .rightArrow {\n      transition: 0.3s;\n      height: 18px;\n      .icon {\n        transition: ${props => props.theme.transition};\n        fill: ${props => props.theme.textColor};\n      }\n    }\n  }\n  &:hover {\n    .rightArrow {\n      transform: translateX(8px);\n    }\n    .readMore {\n      box-shadow: 0 3px 9px #4d4d4d;\n    }\n  }\n`;\n\nexport default BlogListWrapper;\n","import React from 'react';\n\nconst RightArrowSVG = () => {\n  return (\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 268.832 268.832\"\n      className=\"rightArrow\"\n    >\n      <g>\n        <path\n          className=\"icon\"\n          d=\"M265.171,125.577l-80-80c-4.881-4.881-12.797-4.881-17.678,0c-4.882,4.882-4.882,12.796,0,17.678l58.661,58.661H12.5\n\t\tc-6.903,0-12.5,5.597-12.5,12.5c0,6.902,5.597,12.5,12.5,12.5h213.654l-58.659,58.661c-4.882,4.882-4.882,12.796,0,17.678\n\t\tc2.44,2.439,5.64,3.661,8.839,3.661s6.398-1.222,8.839-3.661l79.998-80C270.053,138.373,270.053,130.459,265.171,125.577z\"\n        />\n      </g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n    </svg>\n  );\n};\n\nexport default RightArrowSVG;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\nimport BlogListWrapper from '../../styles/index/BlogListingStyles';\nimport RightArrow from '../../images/svg/RightArrowSVG';\n\nconst BlogListing = ({ data }) => {\n  const { frontmatter, excerpt } = data;\n\n  const setSlug = type => {\n    if (type === 'blogPost') {\n      return `/blog/${frontmatter.slug}`;\n    } else if (type === 'tutorial') {\n      return `/tutorials/${frontmatter.slug}`;\n    }\n  };\n\n  return (\n    <BlogListWrapper>\n      <Link\n        to={setSlug(frontmatter.type)}\n        aria-label={`Read Blog post: ${frontmatter.title}`}\n      >\n        <h2>\n          {frontmatter.type === 'tutorial' && '[Tutorial]: '}\n          {frontmatter.title}\n        </h2>\n        <h5>\n          {frontmatter.subtitle}\n        </h5>\n        <p className=\"publishDate\">\n          Published: <Moment date={frontmatter.date} format=\"MMMM DD, YYYY\" />\n        </p>\n        <p>{excerpt}</p>\n        <ul>\n          {frontmatter.tags &&\n            frontmatter.tags.map((tag, i) => (\n              <li className=\"listingTag\" key={i}>\n                <span>{tag}</span>\n              </li>\n            ))}\n        </ul>\n        <div className=\"timeToRead\">\n        {data.timeToRead &&\n          (frontmatter.type === 'tutorial' ? (\n            <span>Approx. {data.timeToRead + 5} minutes to complete</span>\n          ) : (\n            <span>{data.timeToRead} minute read</span>\n          ))}\n        </div>\n        <div className=\"readMore\">\n          <p>Read More</p>\n          <RightArrow />\n        </div>\n      </Link>\n    </BlogListWrapper>\n  );\n};\n\nBlogListing.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default BlogListing;\n","import styled from 'styled-components';\n\nconst IndexPageWrapper = styled.div`\n  transition: ${props => props.theme.transition};\n\n  .indexIntro {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 0 auto 0;\n\n    h1 {\n      color: ${props => props.theme.textColor};\n      letter-spacing: 0.5px;\n    }\n\n    .introSocialLinks {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      flex-wrap: wrap;\n      width: 90vw;\n      max-width: 350px;\n      margin: 0;\n      li {\n        list-style-type: none;\n        height: 45px;\n        width: 45px;\n        transition: 0.2s;\n        background-color: ${props => props.theme.bgColor};\n        transition: ${props => props.theme.transition};\n      }\n      li:hover {\n        transform: translateY(-10px);\n      }\n      .icon {\n        transition: ${props => props.theme.transition};\n        height: 15px;\n        width: auto;\n        background-color: ${props => props.theme.bgColor};\n        fill: ${props => props.theme.textColor};\n      }\n    }\n  }\n\n  .downArrowLink {\n    width: 80%;\n    margin: -14vh auto 0;\n    text-align: center;\n    align-self: flex-end;\n    transition: ${props => props.theme.transition};\n      \n    a {\n      height: 50px;\n      width: 50px;\n      \n      svg {\n        height: 50px;\n        width: auto;\n        margin: 0 0;\n        background-color: ${props => props.theme.bgColor};\n        transition: ${props => props.theme.transition};\n        .icon {\n          background-color: ${props => props.theme.bgColor};\n          transition: ${props => props.theme.transition};\n          fill: ${props => props.theme.textColor};\n        }\n      }\n    }\n\n  }\n\n  #recentPublications {\n    padding-top: 72px;\n    margin-top: -40px;\n    h1 {\n      margin: 30px 0 0;\n    }\n  }\n\n  @media (min-width: 550px) {\n    .indexIntro {\n      h1 {\n        font-size: 2.6rem;\n      }\n    }\n  }\n\n  @media (min-width: 880px) {\n    .indexIntro {\n      /* margin-left: -10vw; */\n      position: relative;\n      left: 0px;\n      max-width: 1000px;\n\n      h1 {\n        font-size: 3rem;\n      }\n\n      .introSocialLinks {\n        margin-bottom: 25px;\n        li {\n          height: 55px;\n          width: 55px;\n        }\n        .icon {\n          height: 25px;\n        }\n      }\n    }\n  }\n`;\n\nexport { IndexPageWrapper };\n","import React from 'react';\n\nconst Twitter = () => {\n  return (\n    <svg\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 49.652 49.652\"\n    >\n      <g>\n        <g>\n          <path\n            className=\"icon\"\n            d=\"M24.826,0C11.137,0,0,11.137,0,24.826c0,13.688,11.137,24.826,24.826,24.826c13.688,0,24.826-11.138,24.826-24.826\n     C49.652,11.137,38.516,0,24.826,0z M35.901,19.144c0.011,0.246,0.017,0.494,0.017,0.742c0,7.551-5.746,16.255-16.259,16.255\n     c-3.227,0-6.231-0.943-8.759-2.565c0.447,0.053,0.902,0.08,1.363,0.08c2.678,0,5.141-0.914,7.097-2.446\n     c-2.5-0.046-4.611-1.698-5.338-3.969c0.348,0.066,0.707,0.103,1.074,0.103c0.521,0,1.027-0.068,1.506-0.199\n     c-2.614-0.524-4.583-2.833-4.583-5.603c0-0.024,0-0.049,0.001-0.072c0.77,0.427,1.651,0.685,2.587,0.714\n     c-1.532-1.023-2.541-2.773-2.541-4.755c0-1.048,0.281-2.03,0.773-2.874c2.817,3.458,7.029,5.732,11.777,5.972\n     c-0.098-0.419-0.147-0.854-0.147-1.303c0-3.155,2.558-5.714,5.713-5.714c1.644,0,3.127,0.694,4.171,1.804\n     c1.303-0.256,2.523-0.73,3.63-1.387c-0.43,1.335-1.333,2.454-2.516,3.162c1.157-0.138,2.261-0.444,3.282-0.899\n     C37.987,17.334,37.018,18.341,35.901,19.144z\"\n          />\n        </g>\n      </g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n    </svg>\n  );\n};\n\nexport default Twitter;\n","import React from 'react'\n\nconst Linkedin = () => {\n  return (\n    <svg viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path className=\"icon\" d=\"m256 0c-141.363281 0-256 114.636719-256 256s114.636719 256 256 256 256-114.636719 256-256-114.636719-256-256-256zm-74.390625 387h-62.347656v-187.574219h62.347656zm-31.171875-213.1875h-.40625c-20.921875 0-34.453125-14.402344-34.453125-32.402344 0-18.40625 13.945313-32.410156 35.273437-32.410156 21.328126 0 34.453126 14.003906 34.859376 32.410156 0 18-13.53125 32.402344-35.273438 32.402344zm255.984375 213.1875h-62.339844v-100.347656c0-25.21875-9.027343-42.417969-31.585937-42.417969-17.222656 0-27.480469 11.601563-31.988282 22.800781-1.648437 4.007813-2.050781 9.609375-2.050781 15.214844v104.75h-62.34375s.816407-169.976562 0-187.574219h62.34375v26.558594c8.285157-12.78125 23.109375-30.960937 56.1875-30.960937 41.019531 0 71.777344 26.808593 71.777344 84.421874zm0 0\"/>\n    </svg>\n  )\n}\n\nexport default Linkedin;\n","import React from 'react'\n\nconst Github = () => {\n  return (\n    <svg viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path className=\"icon\" d=\"m256 0c-140.609375 0-256 115.390625-256 256 0 119.988281 84.195312 228.984375 196 256v-84.695312c-11.078125 2.425781-21.273438 2.496093-32.550781-.828126-15.128907-4.464843-27.421875-14.542968-36.546875-29.910156-5.816406-9.8125-16.125-20.453125-26.878906-19.671875l-2.636719-29.882812c23.253906-1.992188 43.371093 14.167969 55.3125 34.230469 5.304687 8.921874 11.410156 14.152343 19.246093 16.464843 7.574219 2.230469 15.707032 1.160157 25.183594-2.1875 2.378906-18.972656 11.070313-26.074219 17.636719-36.074219v-.015624c-66.679687-9.945313-93.253906-45.320313-103.800781-73.242188-13.976563-37.074219-6.476563-83.390625 18.238281-112.660156.480469-.570313 1.347656-2.0625 1.011719-3.105469-11.332032-34.230469 2.476562-62.546875 2.984375-65.550781 13.078125 3.867187 15.203125-3.890625 56.808593 21.386718l7.191407 4.320313c3.007812 1.792969 2.0625.769531 5.070312.542969 17.371094-4.71875 35.683594-7.324219 53.726563-7.558594 18.179687.234375 36.375 2.839844 54.464844 7.75l2.328124.234375c-.203124-.03125.632813-.148437 2.035157-.984375 51.972656-31.480469 50.105469-21.191406 64.042969-25.722656.503906 3.007812 14.128906 31.785156 2.917968 65.582031-1.511718 4.65625 45.058594 47.300781 19.246094 115.753906-10.546875 27.933594-37.117188 63.308594-103.796875 73.253907v.015624c8.546875 13.027344 18.816406 19.957032 18.761719 46.832032v105.722656c111.808594-27.015625 196-136.011719 196-256 .003906-140.609375-115.386719-256-255.996094-256zm0 0\"/>\n    </svg>\n  );\n}\n\nexport default Github;\n","import React from 'react';\n\nconst Arrow = () => {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"downArrow\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 451.847 451.847\"\n    >\n      <g>\n        <path\n          className=\"icon\"\n          d=\"M225.923,354.706c-8.098,0-16.195-3.092-22.369-9.263L9.27,151.157c-12.359-12.359-12.359-32.397,0-44.751\n\t\tc12.354-12.354,32.388-12.354,44.748,0l171.905,171.915l171.906-171.909c12.359-12.354,32.391-12.354,44.744,0\n\t\tc12.365,12.354,12.365,32.392,0,44.751L248.292,345.449C242.115,351.621,234.018,354.706,225.923,354.706z\"\n        />\n      </g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n      <g></g>\n    </svg>\n  );\n};\n\nexport default Arrow;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Layout from '../templates/layout';\nimport { IndexPageWrapper } from '../styles/index/IndexStyles';\nimport BlogListing from '../components/index/BlogListing';\n\nimport Twitter from '../images/svg/TwitterSVG';\nimport Instagram from '../images/svg/InstagramSVG';\nimport Linkedin from '../images/svg/LinkedinSVG';\nimport Github from '../images/svg/GithubSVG';\nimport Arrow from '../images/svg/DownArrowSVG';\n\nconst Index = ({ path, data }) => {\n  const {\n    miniBio,\n    twitterURL,\n    githubURL,\n    linkedinURL,\n  } = data.me.childMdx.frontmatter;\n\n  const seo = {\n    page: `index`,\n    title: '',\n    description:`${miniBio}`,\n    url: `https://blog.cursorbeat.dev/`,\n    imgUrl: `${data.pageImg.publicURL}`,\n    imgAlt:\n      'cursorbeat logo, twitter, github icons with @cursorbeat username',\n    breadcrumbs: [],\n  };\n\n  return (\n    <Layout seo={seo} path={path}>\n      <IndexPageWrapper>\n        <div className=\"indexIntro\">\n          <h1>\n            This is the Cursorbeat.dev Blog,\n            <br />- by Adrian Grimm.\n          </h1>\n          <ul className=\"introSocialLinks\">\n            <li>\n              <a\n                target=\"_blank\"\n                href={twitterURL}\n                rel=\"noreferrer\"\n                aria-label=\"Adrian Grimm's twitter profile\"\n              >\n                <Twitter />\n              </a>\n            </li>            \n            {/* <li>\n              <a\n                target=\"_blank\"\n                href={facebookURL}\n                rel=\"noreferrer\"\n                aria-label=\"Adrian's Facebook page\"\n              >\n                <Facebook />\n              </a>\n            </li> */}\n            <li>\n              <a\n                target=\"_blank\"\n                href={linkedinURL}\n                rel=\"noreferrer\"\n                aria-label=\"Adrian Grimm's linkedin profile\"\n              >\n                <Linkedin />\n              </a>\n            </li>\n            <li>\n              <a\n                target=\"_blank\"\n                href={githubURL}\n                rel=\"noreferrer\"\n                aria-label=\"Cursorbeat's Github page\"\n              >\n                <Github />\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"downArrowLink\">\n          <a\n            href=\"#recentPublications\"\n            aria-label=\"scroll down to recent publications section\"\n            style={{ height: '50px', width: '50px' }}\n          >\n            <Arrow />\n          </a>\n        </div>\n\n        {/* Blog posts */}\n        <div id=\"recentPublications\">\n          <h1>All Recent Publications</h1>\n\n          {data.allMdx.edges.map(({ node }) => (\n            <BlogListing key={node.id} data={node} />\n          ))}\n        </div>\n      </IndexPageWrapper>\n    </Layout>\n  );\n};\n\nIndex.propTypes = {\n  path: PropTypes.string.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default Index;\n\nexport const INDEX_POSTS_QUERY = graphql`\n  query INDEX_POSTS_QUERY {\n    # all blog posts, sorted by most recent\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { frontmatter: { type: { in: [\"blogPost\", \"tutorial\"] } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            date\n            title\n            slug\n            subtitle\n            tags\n            type\n          }\n          excerpt(pruneLength: 300)\n          timeToRead\n        }\n      }\n    }\n\n    # social links from about markdown file\n    me: file(relativePath: { eq: \"me.md\" }) {\n      childMdx {\n        id\n        frontmatter {\n          email\n          phone\n          handle\n          miniBio\n          username\n          githubURL\n          linkedinURL\n          twitterURL\n        }\n      }\n    }\n\n    pageImg: file(relativePath:{}) {\n      publicURL # used for SEO\n    }\n  }\n`;\n"],"names":["styled","div","withConfig","displayName","componentId","props","theme","textColor","transition","accentColor","RightArrowSVG","React","version","xmlns","x","y","viewBox","className","d","_ref","data","frontmatter","excerpt","BlogListWrapper","Link","to","type","slug","title","subtitle","Moment","date","format","tags","map","tag","i","key","timeToRead","RightArrow","IndexPageWrapper","bgColor","Twitter","Linkedin","Github","Arrow","id","path","miniBio","twitterURL","githubURL","linkedinURL","me","childMdx","seo","page","description","url","imgUrl","pageImg","publicURL","imgAlt","breadcrumbs","Layout","target","href","rel","style","height","width","allMdx","edges","_ref2","node","BlogListing"],"sourceRoot":""}
<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[CursorBeat]]></title><description><![CDATA[Blog of CursorBeat.dev]]></description><link>https://blog.cursorbeat.dev</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 25 Mar 2020 03:25:57 GMT</lastBuildDate><item><title><![CDATA[PowerShell Config for Developers]]></title><description><![CDATA[As a Developer in the Microsoft Tech-Stack you may like to work with a powerful shell. On Windows there is the PowerShell 7 - but like…]]></description><link>https://blog.cursorbeat.dev/blog/PowerShell-Config-for-Developers</link><guid isPermaLink="false">https://blog.cursorbeat.dev/blog/PowerShell-Config-for-Developers</guid><pubDate>Thu, 19 Mar 2020 07:00:00 GMT</pubDate><content:encoded>&lt;p&gt;As a Developer in the Microsoft Tech-Stack you may like to work with a powerful shell. On Windows there is the &lt;a href=&quot;https://github.com/PowerShell/PowerShell/releases&quot;&gt;PowerShell 7&lt;/a&gt; - but like nearly every other shell, the base config is not as usefull for development tasks as it could be. This post gives some ideas of how the UI/UX could get improved for those tasks.&lt;/p&gt;
&lt;h2&gt;Terminal&lt;/h2&gt;
&lt;p&gt;First of all the old CMD.exe should get retired on your Windows system! I could realy recommend the new &lt;a href=&quot;https://github.com/microsoft/terminal&quot;&gt;Windows Terminal&lt;/a&gt; - even though it&apos;s in preview state. The newest version recieved one of my last missing features - the mouse support for visual input - now it has nearly all needed features to be a powerfull terminal for PowerShell, WSL and SSH use-cases. But you can use PowerShell 7 and this config also on MacOS and Linux if you want (makes sense in terms of e.g. Dot.Net-Core development, Azure Cloud config,...).&lt;/p&gt;
&lt;p&gt;On MacOS I could recommend &lt;a href=&quot;https://iterm2.com&quot;&gt;iTerm 2&lt;/a&gt; on Linux &lt;a href=&quot;https://gnunn1.github.io/tilix-web/&quot;&gt;Tilix&lt;/a&gt; and as Cross-Platform solution with some performance trade-offs &lt;a href=&quot;https://eugeny.github.io/terminus/&quot;&gt;Terminus&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Shell customizing&lt;/h2&gt;
&lt;p&gt;I use Git all the way for version control of my code, snippets, scripts, notes and documentation. My main Git tool is always a commandline Git. Because of that I like to see the Git status always present in the promt of the main shell I use. On Z-Shell and PowerShell exists well implemented PowerLine themes to present those informations in a clean way. To get this style and also the for me important auto-suggest and history-search feature I installed some modules and customised the PowerShell profile.&lt;/p&gt;
&lt;h2&gt;PowerShell Configuration&lt;/h2&gt;
&lt;h3&gt;Modules&lt;/h3&gt;
&lt;p&gt;There are a lot of infrastructure extensions to customize shell&apos;s to be able to easy install packages which extend or modify the look of your shell. For Fish-Shell &quot;&lt;a href=&quot;https://github.com/oh-my-fish/oh-my-fish&quot;&gt;Oh-My-Fish&lt;/a&gt;&quot;, for Z-Shell &quot;&lt;a href=&quot;https://ohmyz.sh&quot;&gt;Oh-My-Zsh&lt;/a&gt;&quot; and this Oh-My-Sh** continues with &quot;&lt;a href=&quot;https://github.com/JanDeDobbeleer/oh-my-posh&quot;&gt;Oh-My-Posh&lt;/a&gt;&quot; for PowerShell.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;powershell&quot;&gt;&lt;pre class=&quot;language-powershell&quot;&gt;&lt;code class=&quot;language-powershell&quot;&gt;Install&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;Module &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;Name oh&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;my&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;posh
Install&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;Module &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;Name posh&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;git &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;AllowPrerelease&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For additional module packages take a look at the &lt;a href=&quot;https://www.powershellgallery.com/packages&quot;&gt;Gallery&lt;/a&gt;.&lt;br&gt;
There is also a upcomming &lt;a href=&quot;http://pecigonzalo.github.io/Oh-My-Posh/&quot;&gt;second &quot;Oh-My-Posh&quot;&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;PowerShell $Profile config&lt;/h3&gt;
&lt;p&gt;To create use &lt;code class=&quot;language-text&quot;&gt;PowerShell&lt;/code&gt;New-Item -path $Profile -type file –force&lt;code class=&quot;language-text&quot;&gt;&lt;/code&gt;.&lt;br&gt;
You can edit your profile config with e.g. &lt;code class=&quot;language-text&quot;&gt;nano $PROFILE&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;powershell&quot;&gt;&lt;pre class=&quot;language-powershell&quot;&gt;&lt;code class=&quot;language-powershell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;PSReadlineKeyHandler &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;Key Tab &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;Function&lt;/span&gt; MenuComplete
&lt;span class=&quot;token function&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;PSReadlineKeyHandler &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;Key UpArrow &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;Function&lt;/span&gt; HistorySearchBackward
&lt;span class=&quot;token function&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;PSReadlineKeyHandler &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;Key DownArrow &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;Function&lt;/span&gt; HistorySearchForward
&lt;span class=&quot;token function&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;PSReadlineOption &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;ShowToolTips &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;BellStyle Visual

&lt;span class=&quot;token function&quot;&gt;Import-Module&lt;/span&gt; posh&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;git
&lt;span class=&quot;token function&quot;&gt;Import-Module&lt;/span&gt; oh&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;my&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;posh
&lt;span class=&quot;token function&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;Theme Paradox&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;May you get an error like &lt;code class=&quot;language-text&quot;&gt;PowerShell_profile.ps1 cannot be loaded. ...PowerShell_profile.ps1 is not digitally signed.&lt;/code&gt; if so, you should run &lt;code class=&quot;language-text&quot;&gt;Set-ExecutionPolicy RemoteSigned&lt;/code&gt; - This will allow to run any script on the local machine, that has not come from the internet.&lt;/p&gt;
&lt;h3&gt;PowerLine&lt;/h3&gt;
&lt;p&gt;For PowerLine support consistent to this setup I could recomend the PowerLine enabled version of the Microsoft Cascadia font &quot;&lt;a href=&quot;https://github.com/microsoft/cascadia-code&quot;&gt;Cascadia Mono PL&lt;/a&gt;&quot; configured in your terminal.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Tilix and Zsh on Windows 10]]></title><description><![CDATA[I like all major Operating-Systems for different reasons and tasks. But for me there is only one perfect shell: "Zsh". The Z-shell is for me…]]></description><link>https://blog.cursorbeat.dev/blog/Tilix-and-Zsh-on-Windows10</link><guid isPermaLink="false">https://blog.cursorbeat.dev/blog/Tilix-and-Zsh-on-Windows10</guid><pubDate>Sat, 01 Feb 2020 07:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I like all major Operating-Systems for different reasons and tasks. But for me there is only one perfect shell: &quot;Zsh&quot;. The &lt;a href=&quot;http://zsh.sourceforge.net&quot;&gt;Z-shell&lt;/a&gt; is for me the right mix of a stable, extendable, modern and universal shell. On MacOS it&apos;s already the new default shell and on Linux it&apos;s easy to install. On Windows it&apos;s also no problem, but to get it working with same smooth expirience like on Linux or MacOS, I use some tools chained together.&lt;/p&gt;
&lt;p&gt;To be clear: Yes, Microsoft has a mighty PowerShell, CMD and Git-Bash is also available for Windows. But in my humble opinion - nothing beats a zsh with the power of linux/unix commandline tool repository.&lt;/p&gt;
&lt;h2&gt;WSL Tuning&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://docs.microsoft.com/de-de/windows/wsl/about&quot;&gt;Windows Subsystem for Linux&lt;/a&gt; is a great Feature that came with Windows 10. I think every DevOp who is working with more than only Microsoft based Operating-Systems should get firm with it.&lt;/p&gt;
&lt;p&gt;If you run WSL, the first decission is which Linux distribution you want to run. All the big ones are available (Ubuntu, Debian, Fedora, etc.). My choice was &lt;a href=&quot;https://www.whitewaterfoundry.com&quot;&gt;Pengwin&lt;/a&gt; - it&apos;s based on Debian, but it&apos;s customised for the use with WSL.&lt;/p&gt;
&lt;p&gt;I installed ZSH and &lt;a href=&quot;https://ohmyz.sh&quot;&gt;OhMyZSH&lt;/a&gt; together with a bunch of plugins to achieve a faster input expirience and a better visualization of context.&lt;/p&gt;
&lt;p&gt;Visualization and UI/UX in general could be a pain on a terminal. Not every terminal is capeable to render the shell output as it intendet to be or handle all keyboard and mouse input right - and yes mouse input support could be great with TMux, NVim, EMacs or other commandline tools. Regarding the UI you can &lt;a href=&quot;https://terminal.sexy/&quot;&gt;customize colors&lt;/a&gt; and fonts as you want, also in terms of syntax highlighting. The defaults are always reduced to a basic configuration. In my case I like to use &lt;a href=&quot;https://www.nerdfonts.com&quot;&gt;Nerd Fonts&lt;/a&gt; and a special &lt;a href=&quot;https://github.com/romkatv/powerlevel10k&quot;&gt;shell promt&lt;/a&gt; that relies on the usage of PowerLine, Lingatures and other font features like icons etc.&lt;/p&gt;
&lt;h2&gt;Tilix&lt;/h2&gt;
&lt;p&gt;On MacOS I would always recomend &lt;a href=&quot;https://iterm2.com&quot;&gt;iTerm2&lt;/a&gt;, but for Linux I like &lt;a href=&quot;https://gnunn1.github.io/tilix-web/&quot;&gt;Tilix&lt;/a&gt;. Tilix is a feature rich and fast terminal which does not need a lot of resources to run, but on Windows it isn&apos;t available. The default on Windows 10 is still the ugly CMD or as alternative the PowerShell - both terminals are OK if you only require to input/output some letters or run a script, but it&apos;s not enjoyable to work with beyond that.&lt;/p&gt;
&lt;p&gt;The best Windows native terminal is the new &lt;a href=&quot;https://github.com/Microsoft/Terminal&quot;&gt;Windows Terminal&lt;/a&gt; from Microsoft - it&apos;s still in development - maybe there is a first stable release in April 2020 available. But until now it still has a lot of missing features.&lt;/p&gt;
&lt;p&gt;The next best terminal running on Windows IMHO is &lt;a href=&quot;https://eugeny.github.io/terminus/&quot;&gt;Terminus&lt;/a&gt;, but it&apos;s a heavy &lt;a href=&quot;https://www.electronjs.org&quot;&gt;ElectronJS&lt;/a&gt; based terminal which needs a lot of resources to run.&lt;/p&gt;
&lt;p&gt;The good thing is that it is possible to run Tilix on Windows through WSL and it&apos;s not as tricky as it sounds like. You only need the X11 stack and a X Server for Windows. This sounds like a lot of overhead but it realy isn&apos;t the case.&lt;/p&gt;
&lt;p&gt;As X Window System&lt;a href=&quot;https://de.wikipedia.org/wiki/X_Window_System&quot;&gt;(X11)&lt;/a&gt; I can highly recomend &lt;a href=&quot;https://token2shell.com/x410/&quot;&gt;X410&lt;/a&gt; from Choung Networks - it&apos;s a fast reliable light weight implementation of X11 for Windows 10.&lt;/p&gt;
&lt;p&gt;I use a little trick to hide a default terminal session window in the background through a &lt;a href=&quot;https://github.com/tmux/tmux/wiki&quot;&gt;TMux&lt;/a&gt;-Server to show up Tilix. To achive this you only need a link in Windows with this command:&lt;/p&gt;
&lt;p&gt; &lt;code class=&quot;language-text&quot;&gt;C:\Windows\System32\wsl.exe -d WLinux -- tmux -c &amp;quot;zsh ~/Tilix_WSL-Launcher.zsh&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And in the WSL instance (here WLinux) you only need to place a &lt;a href=&quot;https://raw.githubusercontent.com/Adrian-Grimm/DotFiles/master/Tilix_WSL-Launcher.zsh&quot;&gt;shell script&lt;/a&gt; which will start X410 and Tilix in Windows with no visible startup console:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;#bin! zsh&lt;/span&gt;
Powershell.exe -Command &lt;span class=&quot;token string&quot;&gt;&apos;start X410.exe /WM&apos;&lt;/span&gt;
tmux new-session -s &lt;span class=&quot;token string&quot;&gt;&quot;Tilix&quot;&lt;/span&gt; -n &lt;span class=&quot;token string&quot;&gt;&quot;Console&quot;&lt;/span&gt; -d&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;
tmux send-keys -t Tilix &lt;span class=&quot;token string&quot;&gt;&quot;Display=:0 dbus-launch --exit-with-session tilix&amp;amp;&quot;&lt;/span&gt; C-m&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Take a look for a nice icon for the Windows link assigned in the properties of it and you are done. &lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I use this setup &lt;a href=&quot;https://twitter.com/AdiGrimm/status/1154045308856258561&quot;&gt;since a couple of month&lt;/a&gt; and I did&apos;t got any issue at all with it. No Bugs no performance issues. Most of the time I&apos;m using Git, &lt;a href=&quot;https://spacevim.org&quot;&gt;SpaceVim&lt;/a&gt;/&lt;a href=&quot;https://neovim.io&quot;&gt;NeoVim&lt;/a&gt;, &lt;a href=&quot;https://github.com/tmux/tmux/wiki&quot;&gt;TMux&lt;/a&gt;, SSH and other tools - and I&apos;m happy with it (maybe I write another blog post about command-line-Tools, but you can get some inspiration from &lt;a href=&quot;https://github.com/herrbischoff/awesome-command-line-apps&quot;&gt;this awesome collection&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;If you like to use my configurations feel free to copy my &lt;a href=&quot;https://github.com/Adrian-Grimm/DotFiles&quot;&gt;DotFiles repository on GitHub&lt;/a&gt; - but don&apos;t blame me for some more dirty hacks in there :wink:. You can also clone it with &lt;a href=&quot;https://yadm.io&quot;&gt;YADM&lt;/a&gt; - a DotFiles Manager I could recoment.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[First CursorBeat . . first lines]]></title><description><![CDATA[The cursor beats and running letters mark down the line in the text.app for this static.site powerd Blog. In the first steps everything here…]]></description><link>https://blog.cursorbeat.dev/blog/first-cursorbeat-blog-launch</link><guid isPermaLink="false">https://blog.cursorbeat.dev/blog/first-cursorbeat-blog-launch</guid><pubDate>Sun, 01 Dec 2019 07:00:00 GMT</pubDate><content:encoded>&lt;p&gt;The cursor beats and running letters mark down the line in the &lt;a href=&quot;https://marktext.app&quot;&gt;text.app&lt;/a&gt; for this &lt;a href=&quot;https://www.gatsbyjs.org&quot;&gt;static.site&lt;/a&gt; powerd Blog.&lt;/p&gt;
&lt;p&gt;In the first steps everything here will be about Apps/Tools, Software-Development, DevOps and some storys worth to be told around those topics.&lt;/p&gt;
&lt;p&gt;I try to keep everything as short as possible, to be able to read everything quickly, not wasting time.&lt;/p&gt;
&lt;p&gt;To be introduced: My name is Adrian Grimm I&apos;m a german Software-Developer and currently the only one who pushes the cursor beating around here.&lt;/p&gt;
&lt;p&gt;Blog Design and used technologys could change over time, but as for now this will work - hostet on &lt;a href=&quot;https://pages.github.com&quot;&gt;Github-Pages&lt;/a&gt; deployed by &lt;a href=&quot;https://travis-ci.com&quot;&gt;Travis-CI&lt;/a&gt; - so this is atm the DevOps style to blog.
If you want to take a look into the Code behind this - everything will be and stay opensource on &lt;a href=&quot;https://github.com/cursorbeat/cursorbeat.github.io&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&apos;s done! : &lt;a href=&quot;https://blog.cursorbeat.dev&quot;&gt;CursorBeat.dev Blog&lt;/a&gt; is online :tada: - cursor beats - waiting for more key pressed - instructing to move on - leaving signs behind...&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Placeholder]]></title><description><![CDATA[Here will be some tutorial someday...]]></description><link>https://blog.cursorbeat.dev/tutorials/index</link><guid isPermaLink="false">https://blog.cursorbeat.dev/tutorials/index</guid><pubDate>Tue, 01 Oct 2019 07:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Here will be some tutorial someday...&lt;/p&gt;</content:encoded></item></channel></rss>
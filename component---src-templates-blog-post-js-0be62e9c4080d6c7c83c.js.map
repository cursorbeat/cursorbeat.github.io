{"version":3,"sources":["webpack:///./.yarn/cache/path-browserify-npm-0.0.1-bb8b2a97b1-b7be4bcc03.zip/node_modules/path-browserify/index.js","webpack:///./src/components/blog/BlogAuthor.js","webpack:///./src/styles/blog/BlogPostStyles.js","webpack:///./src/templates/blogPost.js"],"names":["normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","filter","xs","f","res","push","exports","resolve","resolvedPath","resolvedAbsolute","arguments","path","process","cwd","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","slice","call","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str","len","BlogAuthor","myData","file","childMarkdownRemark","frontmatter","name","miniBio","portrait","email","handle","className","fluid","childImageSharp","title","alt","style","height","width","borderRadius","BlogPostPageWrapper","styled","div","props","theme","transition","bgColor","textColor","require","BLOG_POST_QUERY","blogPost","seo","data","markdownRemark","type","slug","subtitle","imageTitle","image","imageAlt","date","tags","page","description","excerpt","url","imgUrl","publicURL","imgAlt","breadcrumbs","textAlign","format","timeToRead","marginBottom","dangerouslySetInnerHTML","__html","html"],"mappings":"60FAAA,YA8BA,SAASA,EAAeC,EAAOC,GAI7B,IAFA,IAAIC,EAAK,EAEAC,EAAIH,EAAMI,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC1C,IAAIE,EAAOL,EAAMG,GAEJ,MAATE,EACFL,EAAMM,OAAOH,EAAG,GACE,OAATE,GACTL,EAAMM,OAAOH,EAAG,GAChBD,KACSA,IACTF,EAAMM,OAAOH,EAAG,GAChBD,KAKJ,GAAID,EACF,KAAOC,IAAMA,EACXF,EAAMO,QAAQ,MAIlB,OAAOP,EAyPT,SAASQ,EAAOC,EAAIC,GAClB,GAAID,EAAGD,OAAQ,OAAOC,EAAGD,OAAOE,GAGhC,IAFA,IAAIC,EAAM,GAEDR,EAAI,EAAGA,EAAIM,EAAGL,OAAQD,IACzBO,EAAED,EAAGN,GAAIA,EAAGM,IAAKE,EAAIC,KAAKH,EAAGN,IAGnC,OAAOQ,EAxTT,EAAQ,QAER,EAAQ,QA0DRE,EAAQC,QAAU,WAIhB,IAHA,IAAIC,EAAe,GACfC,GAAmB,EAEdb,EAAIc,UAAUb,OAAS,EAAGD,IAAM,IAAMa,EAAkBb,IAAK,CACpE,IAAIe,EAAOf,GAAK,EAAIc,UAAUd,GAAKgB,EAAQC,MAE3C,GAAoB,iBAATF,EACT,MAAM,IAAIG,UAAU,6CACVH,IAIZH,EAAeG,EAAO,IAAMH,EAC5BC,EAAsC,MAAnBE,EAAKI,OAAO,IASjC,OAAQN,EAAmB,IAAM,KAHjCD,EAAehB,EAAeS,EAAOO,EAAaQ,MAAM,MAAM,SAAUC,GACtE,QAASA,MACNR,GAAkBS,KAAK,OAC2B,KAKzDZ,EAAQa,UAAY,SAAUR,GAC5B,IAAIS,EAAad,EAAQc,WAAWT,GAChCU,EAAqC,MAArBC,EAAOX,GAAO,GAclC,OAZAA,EAAOnB,EAAeS,EAAOU,EAAKK,MAAM,MAAM,SAAUC,GACtD,QAASA,MACNG,GAAYF,KAAK,OAERE,IACZT,EAAO,KAGLA,GAAQU,IACVV,GAAQ,MAGFS,EAAa,IAAM,IAAMT,GAInCL,EAAQc,WAAa,SAAUT,GAC7B,MAA0B,MAAnBA,EAAKI,OAAO,IAIrBT,EAAQY,KAAO,WACb,IAAIK,EAAQC,MAAMC,UAAUC,MAAMC,KAAKjB,UAAW,GAClD,OAAOJ,EAAQa,UAAUlB,EAAOsB,GAAO,SAAUN,EAAGW,GAClD,GAAiB,iBAANX,EACT,MAAM,IAAIH,UAAU,0CAGtB,OAAOG,KACNC,KAAK,OAKVZ,EAAQuB,SAAW,SAAUC,EAAMC,GAIjC,SAASC,EAAKC,GAGZ,IAFA,IAAIC,EAAQ,EAELA,EAAQD,EAAIpC,QACE,KAAfoC,EAAIC,GADiBA,KAM3B,IAFA,IAAIC,EAAMF,EAAIpC,OAAS,EAEhBsC,GAAO,GACK,KAAbF,EAAIE,GADOA,KAIjB,OAAID,EAAQC,EAAY,GACjBF,EAAIP,MAAMQ,EAAOC,EAAMD,EAAQ,GAjBxCJ,EAAOxB,EAAQC,QAAQuB,GAAMR,OAAO,GACpCS,EAAKzB,EAAQC,QAAQwB,GAAIT,OAAO,GAwBhC,IALA,IAAIc,EAAYJ,EAAKF,EAAKd,MAAM,MAC5BqB,EAAUL,EAAKD,EAAGf,MAAM,MACxBnB,EAASyC,KAAKC,IAAIH,EAAUvC,OAAQwC,EAAQxC,QAC5C2C,EAAkB3C,EAEbD,EAAI,EAAGA,EAAIC,EAAQD,IAC1B,GAAIwC,EAAUxC,KAAOyC,EAAQzC,GAAI,CAC/B4C,EAAkB5C,EAClB,MAIJ,IAAI6C,EAAc,GAElB,IAAS7C,EAAI4C,EAAiB5C,EAAIwC,EAAUvC,OAAQD,IAClD6C,EAAYpC,KAAK,MAInB,OADAoC,EAAcA,EAAYC,OAAOL,EAAQX,MAAMc,KAC5BtB,KAAK,MAG1BZ,EAAQqC,IAAM,IACdrC,EAAQsC,UAAY,IAEpBtC,EAAQuC,QAAU,SAAUlC,GAE1B,GADoB,iBAATA,IAAmBA,GAAc,IACxB,IAAhBA,EAAKd,OAAc,MAAO,IAQ9B,IAPA,IAAIiD,EAAOnC,EAAKoC,WAAW,GACvBC,EAAmB,KAATF,EAGVX,GAAO,EACPc,GAAe,EAEVrD,EAAIe,EAAKd,OAAS,EAAGD,GAAK,IAAKA,EAGtC,GAAa,MAFbkD,EAAOnC,EAAKoC,WAAWnD,KAKnB,IAAKqD,EAAc,CACjBd,EAAMvC,EACN,YAIJqD,GAAe,EAInB,OAAa,IAATd,EAAmBa,EAAU,IAAM,IAEnCA,GAAmB,IAARb,EAGN,IAGFxB,EAAKe,MAAM,EAAGS,IAkCvB7B,EAAQ4C,SAAW,SAAUvC,EAAMwC,GACjC,IAAIhD,EAhCN,SAAkBQ,GACI,iBAATA,IAAmBA,GAAc,IAC5C,IAGIf,EAHAsC,EAAQ,EACRC,GAAO,EACPc,GAAe,EAGnB,IAAKrD,EAAIe,EAAKd,OAAS,EAAGD,GAAK,IAAKA,EAClC,GAA2B,KAAvBe,EAAKoC,WAAWnD,IAKhB,IAAKqD,EAAc,CACjBf,EAAQtC,EAAI,EACZ,YAEgB,IAATuC,IAGXc,GAAe,EACfd,EAAMvC,EAAI,GAId,OAAa,IAATuC,EAAmB,GAChBxB,EAAKe,MAAMQ,EAAOC,GAMjBe,CAASvC,GAMjB,OAJIwC,GAAOhD,EAAEmB,QAAQ,EAAI6B,EAAItD,UAAYsD,IACvChD,EAAIA,EAAEmB,OAAO,EAAGnB,EAAEN,OAASsD,EAAItD,SAG1BM,GAGTG,EAAQ8C,QAAU,SAAUzC,GACN,iBAATA,IAAmBA,GAAc,IAS5C,IARA,IAAI0C,GAAY,EACZC,EAAY,EACZnB,GAAO,EACPc,GAAe,EAGfM,EAAc,EAET3D,EAAIe,EAAKd,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACzC,IAAIkD,EAAOnC,EAAKoC,WAAWnD,GAE3B,GAAa,KAATkD,GAaS,IAATX,IAGFc,GAAe,EACfd,EAAMvC,EAAI,GAGC,KAATkD,GAIkB,IAAdO,EAAiBA,EAAWzD,EAA2B,IAAhB2D,IAAmBA,EAAc,IACrD,IAAdF,IAGXE,GAAe,QAvBb,IAAKN,EAAc,CACjBK,EAAY1D,EAAI,EAChB,OAyBR,OAAkB,IAAdyD,IAA4B,IAATlB,GACP,IAAhBoB,GACgB,IAAhBA,GAAqBF,IAAalB,EAAM,GAAKkB,IAAaC,EAAY,EAC7D,GAGF3C,EAAKe,MAAM2B,EAAUlB,IAe9B,IAAIb,EAA6B,MAApB,KAAKA,QAAQ,GAAa,SAAUkC,EAAKtB,EAAOuB,GAC3D,OAAOD,EAAIlC,OAAOY,EAAOuB,IACvB,SAAUD,EAAKtB,EAAOuB,GAExB,OADIvB,EAAQ,IAAGA,EAAQsB,EAAI3D,OAASqC,GAC7BsB,EAAIlC,OAAOY,EAAOuB,M,kOCjQZC,EA3DI,WACjB,IAAMC,EAAM,OADW,EAmCnBA,EAAOC,KAAKC,oBAAoBC,YALlCC,EA9BqB,EA8BrBA,KACAC,EA/BqB,EA+BrBA,QA/BqB,EAgCrBC,SAhCqB,EAiCrBC,MAjCqB,EAkCrBC,OAGF,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEC,MAAOV,EAAOM,SAASK,gBAAgBD,MACvCE,MAAM,eACNC,IAAI,wBACJC,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,aAAc,WAIpB,yBAAKR,UAAU,UACb,mCAASL,GACT,2BAAIC,MCmCGa,E,UA1FaC,EAAOC,IAAV,0FAAGD,CAAH,80BAET,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,cACf,SAAAF,GAAK,OAAIA,EAAMC,MAAME,WAuDvB,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,cAC3B,SAAAF,GAAK,OAAIA,EAAMC,MAAMG,aCtD7BzE,EAAO0E,EAAQ,QAyGRC,GAFEC,UAlGE,SAAC,GAAY,IAcxBC,EAdaC,EAAU,EAAVA,KAAU,EAWvBA,EAAKC,eAAe5B,YATtB6B,EAFyB,EAEzBA,KACApB,EAHyB,EAGzBA,MACAqB,EAJyB,EAIzBA,KACAC,EALyB,EAKzBA,SAEAC,GAPyB,EAMzBC,MANyB,EAOzBD,YACAE,EARyB,EAQzBA,SACAC,EATyB,EASzBA,KATyB,EAUzBC,KA6CF,MAxCa,aAATP,EACFH,EAAM,CACJW,KAAK,GAAIR,EACTpB,MAAM,GAAIA,EACV6B,YAAaX,EAAKC,eAAeW,QACjCC,IAAI,+BAAgCV,EACpCW,OAAQd,EAAK7B,KAAK4C,UAClBC,OAAQhB,EAAKC,eAAe5B,YAAYkC,SACxCU,YAAa,CACX,CACE3C,KAAK,OACLpD,KAAK,SAEP,CACEoD,KAAK,GAAIQ,EACT5D,KAAK,SAAUiF,KAIH,aAATD,IACTH,EAAM,CACJW,KAAK,GAAIR,EACTpB,MAAM,GAAIA,EACV6B,YAAaX,EAAKC,eAAeW,QACjCC,IAAI,+BAAgCV,EACpCW,OAAQd,EAAK7B,KAAK4C,UAClBC,OAAQhB,EAAKC,eAAe5B,YAAYkC,SACxCU,YAAa,CACX,CACE3C,KAAK,YACLpD,KAAK,cAEP,CACEoD,KAAK,GAAIQ,EACT5D,KAAK,cAAeiF,MAO1B,kBAAC,IAAD,CAAQJ,IAAKA,EAAK7E,KAAMA,EAAM8D,MAAO,CAAEkC,UAAW,SAChD,kBAAC,EAAD,KACE,4BAAKpC,GACL,4BAAKsB,GACL,uBAAGzB,UAAU,aAAb,cACa,kBAAC,IAAD,CAAQ6B,KAAMA,EAAMW,OAAO,kBAGvCnB,EAAKC,eAAemB,aACT,aAATlB,EACC,sCACWF,EAAKC,eAAemB,WAAa,EAD5C,wBAKA,2BAAIpB,EAAKC,eAAemB,WAAxB,iBAGJ,kBAAC,EAAD,MAEA,kBAAC,IAAD,CACEzC,UAAU,gBACVK,MAAO,CACLqC,aAAc,QAEhBzC,MAAOoB,EAAK7B,KAAKU,gBAAgBD,MACjCG,IAAKwB,EACLzB,MAAOuB,IAGT,6BACEiB,wBAAyB,CAAEC,OAAQvB,EAAKC,eAAeuB,QAGzD,yBAAK7C,UAAU,WACb,yDASkB","file":"component---src-templates-blog-post-js-0be62e9c4080d6c7c83c.js","sourcesContent":["require(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\n// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  } // if the path is allowed to go above the root, restore leading ..s\n\n\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n} // path.resolve([from ...], to)\n// posix version\n\n\nexports.resolve = function () {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd(); // Skip empty and invalid entries\n\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  } // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n  // Normalize the path\n\n\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}; // path.normalize(path)\n// posix version\n\n\nexports.normalize = function (path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/'; // Normalize the path\n\n  path = normalizeArray(filter(path.split('/'), function (p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n}; // posix version\n\n\nexports.isAbsolute = function (path) {\n  return path.charAt(0) === '/';\n}; // posix version\n\n\nexports.join = function () {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function (p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n\n    return p;\n  }).join('/'));\n}; // path.relative(from, to)\n// posix version\n\n\nexports.relative = function (from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47\n  /*/*/\n  ;\n  var end = -1;\n  var matchedSlash = true;\n\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n} // Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\n\n\nexports.basename = function (path, ext) {\n  var f = basename(path);\n\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true; // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n\n  var preDotState = 0;\n\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n\n    if (code === 47\n    /*/*/\n    ) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n\n        continue;\n      }\n\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n\n    if (code === 46\n    /*.*/\n    ) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n  preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n\n  return path.slice(startDot, end);\n};\n\nfunction filter(xs, f) {\n  if (xs.filter) return xs.filter(f);\n  var res = [];\n\n  for (var i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) res.push(xs[i]);\n  }\n\n  return res;\n} // String.prototype.substr - negative index don't work in IE8\n\n\nvar substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n  return str.substr(start, len);\n} : function (str, start, len) {\n  if (start < 0) start = str.length + start;\n  return str.substr(start, len);\n};","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nconst BlogAuthor = () => {\n  const myData = useStaticQuery(graphql`\n    query {\n      file(relativePath: { eq: \"me.md\" }) {\n        childMarkdownRemark {\n          id\n          frontmatter {\n            name\n            miniBio\n            portrait\n            email\n            handle\n            twitterURL\n            githubURL\n            linkedinURL\n          }\n        }\n      }\n\n      portrait: file(relativePath: { eq: \"portrait.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n    }\n  `);\n\n  const {\n    name,\n    miniBio,\n    portrait,\n    email,\n    handle,\n  } = myData.file.childMarkdownRemark.frontmatter;\n\n  return (\n    <div className=\"author\">\n      <div className=\"portrait\">\n        <Img\n          fluid={myData.portrait.childImageSharp.fluid}\n          title=\"Adrian Grimm\"\n          alt=\"photo of Adrian Grimm\"\n          style={{\n            height: '80px',\n            width: '80px',\n            borderRadius: '100%'\n          }}\n        />\n      </div>\n      <div className=\"myInfo\">\n        <h3>By: {name}</h3>\n        <p>{miniBio}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogAuthor;\n","import styled from 'styled-components';\n\nconst BlogPostPageWrapper = styled.div`\n  margin-top: 100px;\n  transition: ${props => props.theme.transition};\n  background-color: ${props => props.theme.bgColor};\n  width: 100%;\n\n  h1 {\n    font-size: 3rem;\n  }\n  h2 {\n    font-size: 1.7rem;\n    margin: 10px 0;\n  }\n  .published {\n    margin-bottom: 3px;    \n  }\n  .mainpostimage {\n    max-height: 380px;\n    object-position: center;\n    text-align: center;\n    img {\n      display: block;\n      max-width:1000px;\n      max-height:380px;\n      width: auto !important;\n      height: auto !important;\n    }\n  }\n\n  .author {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 10px;\n    align-items: center;\n\n    div {\n      height: 100px;\n      padding: 10px;\n    }\n    .portrait {\n      align-self: flex-start;\n    }\n    .myInfo {\n      height: auto;\n    }\n    h3 {\n\n      margin: 0 0 10px;\n    }\n    p {\n      font-size: 0.9rem;\n      max-width: 680px;\n    }\n  }\n\n  .closing {\n    margin: 40px 60px 0;\n    svg {\n      transition: ${props => props.theme.transition};\n      fill: ${props => props.theme.textColor};\n      width: 65vw;\n      height: auto;\n      max-width: 400px;\n    }\n    h3 {\n      margin-top: 15px;\n      margin-left: 35px;\n    }\n  }\n  @media (max-width: 620px) {\n    .author {\n      margin-bottom: 10px;\n      p {\n        margin-bottom: 0;\n        font-size: 0.8rem;\n      }\n    }\n\n    .closing {\n      margin: 30px 15px 10px;\n\n      svg {\n        width: 80vw;\n        height: auto;\n        max-width: 380px;\n      }\n    }\n  }\n`;\n\nexport default BlogPostPageWrapper;\n","import React from 'react';\nimport Layout from './layout';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport Moment from 'react-moment';\nimport BlogAuthor from '../components/blog/BlogAuthor';\nimport BlogPostPageWrapper from '../styles/blog/BlogPostStyles';\nconst path = require(`path`);\n\n\n// TODO add next and previous post links\n\nconst blogPost = ({data}) => {\n  const {\n    type,\n    title,\n    slug,\n    subtitle,\n    image,\n    imageTitle,\n    imageAlt,\n    date,\n    tags,\n  } = data.markdownRemark.frontmatter;\n\n  // ? set SEO meta data depending on post type\n  let seo;\n  if (type === 'blogPost') {\n    seo = {\n      page: `${type}`,\n      title: `${title}`,\n      description: data.markdownRemark.excerpt,\n      url: `https://blog.cursorbeat.dev/${slug}`,\n      imgUrl: data.file.publicURL,\n      imgAlt: data.markdownRemark.frontmatter.imageAlt,\n      breadcrumbs: [\n        {\n          name: `Blog`,\n          path: `/blog`,\n        },\n        {\n          name: `${title}`,\n          path: `/blog/${slug}`,\n        },\n      ],\n    };\n  } else if (type === 'tutorial') {\n    seo = {\n      page: `${type}`,\n      title: `${title}`,\n      description: data.markdownRemark.excerpt,\n      url: `https://blog.cursorbeat.dev/${slug}`,\n      imgUrl: data.file.publicURL,\n      imgAlt: data.markdownRemark.frontmatter.imageAlt,\n      breadcrumbs: [\n        {\n          name: `Tutorials`,\n          path: `/tutorials`,\n        },\n        {\n          name: `${title}`,\n          path: `/tutorials/${slug}`,\n        },\n      ],\n    };\n  }\n\n  return (\n    <Layout seo={seo} path={path} style={{ textAlign: 'left' }}>\n      <BlogPostPageWrapper>\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n        <p className=\"published\">\n          Published: <Moment date={date} format=\"MMM DD, YYYY\" />\n        </p>\n\n        {data.markdownRemark.timeToRead &&\n          (type === 'tutorial' ? (\n            <p>\n              Approx. {data.markdownRemark.timeToRead + 5} minutes to\n              complete\n            </p>\n          ) : (\n            <p>{data.markdownRemark.timeToRead} minute read</p>\n          ))}\n\n        <BlogAuthor />\n\n        <Img\n          className=\"mainpostimage\"\n          style={{\n            marginBottom: '25px',\n          }}\n          fluid={data.file.childImageSharp.fluid}\n          alt={imageAlt}\n          title={imageTitle}\n        />\n\n        <article\n          dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }}\n        />\n\n        <div className=\"closing\">\n          <h3>- CursorBeat.dev Blog</h3>\n        </div>\n      </BlogPostPageWrapper>\n    </Layout>\n  );\n};\n\nexport default blogPost;\n\nexport const BLOG_POST_QUERY = graphql`\n  query BlogPostQuery($slug: String!, $imgRegEx: String) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt(pruneLength: 370)\n      timeToRead\n      frontmatter {\n        type\n        title\n        slug\n        subtitle\n        image\n        imageTitle\n        imageAlt\n        date\n        tags\n      }\n    }\n\n    file(relativePath: { regex: $imgRegEx }) {\n      publicURL # used for SEO\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}